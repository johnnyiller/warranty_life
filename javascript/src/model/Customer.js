/**
 * Warranty Life
 * Warranty life api definition for openapi 3.0.0 from here we generate api's
 *
 * OpenAPI spec version: 1.0.5
 * Contact: jeff.durand@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.WarrantyLife) {
      root.WarrantyLife = {};
    }
    root.WarrantyLife.Customer = factory(root.WarrantyLife.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Customer model module.
   * @module model/Customer
   * @version 1.0.5
   */

  /**
   * Constructs a new <code>Customer</code>.
   * @alias module:model/Customer
   * @class
   * @param firstName {String} 
   * @param streetAddress {String} 
   * @param city {String} 
   * @param state {String} 
   * @param postalCode {String} 
   * @param phone {String} 
   * @param country {module:model/Customer.CountryEnum} 
   */
  var exports = function(firstName, streetAddress, city, state, postalCode, phone, country) {
    var _this = this;







    _this['firstName'] = firstName;


    _this['streetAddress'] = streetAddress;
    _this['city'] = city;
    _this['state'] = state;
    _this['postalCode'] = postalCode;
    _this['phone'] = phone;
    _this['country'] = country;


  };

  /**
   * Constructs a <code>Customer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Customer} obj Optional instance to populate.
   * @return {module:model/Customer} The populated <code>Customer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('refId')) {
        obj['refId'] = ApiClient.convertToType(data['refId'], 'String');
      }
      if (data.hasOwnProperty('orderRefId')) {
        obj['orderRefId'] = ApiClient.convertToType(data['orderRefId'], 'String');
      }
      if (data.hasOwnProperty('customerUrl')) {
        obj['customerUrl'] = ApiClient.convertToType(data['customerUrl'], 'String');
      }
      if (data.hasOwnProperty('salesRepEmail')) {
        obj['salesRepEmail'] = ApiClient.convertToType(data['salesRepEmail'], 'String');
      }
      if (data.hasOwnProperty('emailAddress')) {
        obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
      }
      if (data.hasOwnProperty('firstName')) {
        obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
      }
      if (data.hasOwnProperty('lastName')) {
        obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
      }
      if (data.hasOwnProperty('companyName')) {
        obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');
      }
      if (data.hasOwnProperty('streetAddress')) {
        obj['streetAddress'] = ApiClient.convertToType(data['streetAddress'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'String');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'String');
      }
      if (data.hasOwnProperty('postalCode')) {
        obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
      }
      if (data.hasOwnProperty('phone')) {
        obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
      }
      if (data.hasOwnProperty('country')) {
        obj['country'] = ApiClient.convertToType(data['country'], 'String');
      }
      if (data.hasOwnProperty('isWalkIn')) {
        obj['isWalkIn'] = ApiClient.convertToType(data['isWalkIn'], 'Boolean');
      }
      if (data.hasOwnProperty('optIn')) {
        obj['optIn'] = ApiClient.convertToType(data['optIn'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} refId
   */
  exports.prototype['refId'] = undefined;
  /**
   * @member {String} orderRefId
   */
  exports.prototype['orderRefId'] = undefined;
  /**
   * @member {String} customerUrl
   */
  exports.prototype['customerUrl'] = undefined;
  /**
   * @member {String} salesRepEmail
   */
  exports.prototype['salesRepEmail'] = undefined;
  /**
   * @member {String} emailAddress
   */
  exports.prototype['emailAddress'] = undefined;
  /**
   * @member {String} firstName
   */
  exports.prototype['firstName'] = undefined;
  /**
   * @member {String} lastName
   */
  exports.prototype['lastName'] = undefined;
  /**
   * @member {String} companyName
   */
  exports.prototype['companyName'] = undefined;
  /**
   * @member {String} streetAddress
   */
  exports.prototype['streetAddress'] = undefined;
  /**
   * @member {String} city
   */
  exports.prototype['city'] = undefined;
  /**
   * @member {String} state
   */
  exports.prototype['state'] = undefined;
  /**
   * @member {String} postalCode
   */
  exports.prototype['postalCode'] = undefined;
  /**
   * @member {String} phone
   */
  exports.prototype['phone'] = undefined;
  /**
   * @member {module:model/Customer.CountryEnum} country
   */
  exports.prototype['country'] = undefined;
  /**
   * @member {Boolean} isWalkIn
   */
  exports.prototype['isWalkIn'] = undefined;
  /**
   * @member {Boolean} optIn
   */
  exports.prototype['optIn'] = undefined;


  /**
   * Allowed values for the <code>country</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CountryEnum = {
    /**
     * value: "US"
     * @const
     */
    "US": "US",
    /**
     * value: "CA"
     * @const
     */
    "CA": "CA",
    /**
     * value: "IN"
     * @const
     */
    "IN": "IN",
    /**
     * value: "BD"
     * @const
     */
    "BD": "BD",
    /**
     * value: "PH"
     * @const
     */
    "PH": "PH",
    /**
     * value: "AU"
     * @const
     */
    "AU": "AU"  };


  return exports;
}));


