/**
 * Warranty Life
 * Warranty life api definition for openapi 3.0.0 from here we generate api's
 *
 * OpenAPI spec version: 1.0.5
 * Contact: jeff.durand@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.WarrantyLife) {
      root.WarrantyLife = {};
    }
    root.WarrantyLife.Item = factory(root.WarrantyLife.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Item model module.
   * @module model/Item
   * @version 1.0.5
   */

  /**
   * Constructs a new <code>Item</code>.
   * @alias module:model/Item
   * @class
   */
  var exports = function() {
    var _this = this;



















  };

  /**
   * Constructs a <code>Item</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Item} obj Optional instance to populate.
   * @return {module:model/Item} The populated <code>Item</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('refId')) {
        obj['refId'] = ApiClient.convertToType(data['refId'], 'String');
      }
      if (data.hasOwnProperty('orderRefId')) {
        obj['orderRefId'] = ApiClient.convertToType(data['orderRefId'], 'String');
      }
      if (data.hasOwnProperty('customerId')) {
        obj['customerId'] = ApiClient.convertToType(data['customerId'], 'String');
      }
      if (data.hasOwnProperty('dateOfPurchase')) {
        obj['dateOfPurchase'] = ApiClient.convertToType(data['dateOfPurchase'], 'Date');
      }
      if (data.hasOwnProperty('productId')) {
        obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
      }
      if (data.hasOwnProperty('productSku')) {
        obj['productSku'] = ApiClient.convertToType(data['productSku'], 'String');
      }
      if (data.hasOwnProperty('purchasedCondition')) {
        obj['purchasedCondition'] = ApiClient.convertToType(data['purchasedCondition'], 'String');
      }
      if (data.hasOwnProperty('contractYears')) {
        obj['contractYears'] = ApiClient.convertToType(data['contractYears'], 'String');
      }
      if (data.hasOwnProperty('pricePaid')) {
        obj['pricePaid'] = ApiClient.convertToType(data['pricePaid'], 'Number');
      }
      if (data.hasOwnProperty('pricePaidCurrencyCode')) {
        obj['pricePaidCurrencyCode'] = ApiClient.convertToType(data['pricePaidCurrencyCode'], 'String');
      }
      if (data.hasOwnProperty('taxPaid')) {
        obj['taxPaid'] = ApiClient.convertToType(data['taxPaid'], 'Number');
      }
      if (data.hasOwnProperty('shippingPaid')) {
        obj['shippingPaid'] = ApiClient.convertToType(data['shippingPaid'], 'Number');
      }
      if (data.hasOwnProperty('serialNumber')) {
        obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
      }
      if (data.hasOwnProperty('serialNumberType')) {
        obj['serialNumberType'] = ApiClient.convertToType(data['serialNumberType'], 'String');
      }
      if (data.hasOwnProperty('isRepaired')) {
        obj['isRepaired'] = ApiClient.convertToType(data['isRepaired'], 'Boolean');
      }
      if (data.hasOwnProperty('hasDamage')) {
        obj['hasDamage'] = ApiClient.convertToType(data['hasDamage'], 'Boolean');
      }
      if (data.hasOwnProperty('categoryId')) {
        obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} refId
   */
  exports.prototype['refId'] = undefined;
  /**
   * @member {String} orderRefId
   */
  exports.prototype['orderRefId'] = undefined;
  /**
   * @member {String} customerId
   */
  exports.prototype['customerId'] = undefined;
  /**
   * @member {Date} dateOfPurchase
   */
  exports.prototype['dateOfPurchase'] = undefined;
  /**
   * @member {String} productId
   */
  exports.prototype['productId'] = undefined;
  /**
   * @member {String} productSku
   */
  exports.prototype['productSku'] = undefined;
  /**
   * @member {module:model/Item.PurchasedConditionEnum} purchasedCondition
   */
  exports.prototype['purchasedCondition'] = undefined;
  /**
   * @member {String} contractYears
   */
  exports.prototype['contractYears'] = undefined;
  /**
   * @member {Number} pricePaid
   */
  exports.prototype['pricePaid'] = undefined;
  /**
   * @member {module:model/Item.PricePaidCurrencyCodeEnum} pricePaidCurrencyCode
   */
  exports.prototype['pricePaidCurrencyCode'] = undefined;
  /**
   * @member {Number} taxPaid
   */
  exports.prototype['taxPaid'] = undefined;
  /**
   * @member {Number} shippingPaid
   */
  exports.prototype['shippingPaid'] = undefined;
  /**
   * @member {String} serialNumber
   */
  exports.prototype['serialNumber'] = undefined;
  /**
   * @member {module:model/Item.SerialNumberTypeEnum} serialNumberType
   */
  exports.prototype['serialNumberType'] = undefined;
  /**
   * @member {Boolean} isRepaired
   */
  exports.prototype['isRepaired'] = undefined;
  /**
   * @member {Boolean} hasDamage
   */
  exports.prototype['hasDamage'] = undefined;
  /**
   * @member {String} categoryId
   */
  exports.prototype['categoryId'] = undefined;


  /**
   * Allowed values for the <code>purchasedCondition</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PurchasedConditionEnum = {
    /**
     * value: "NEW"
     * @const
     */
    "NEW": "NEW",
    /**
     * value: "USED"
     * @const
     */
    "USED": "USED",
    /**
     * value: "REFURBISHED"
     * @const
     */
    "REFURBISHED": "REFURBISHED"  };

  /**
   * Allowed values for the <code>pricePaidCurrencyCode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PricePaidCurrencyCodeEnum = {
    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",
    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD"  };

  /**
   * Allowed values for the <code>serialNumberType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SerialNumberTypeEnum = {
    /**
     * value: "ESN"
     * @const
     */
    "ESN": "ESN",
    /**
     * value: "IMEI"
     * @const
     */
    "IMEI": "IMEI",
    /**
     * value: "MEID"
     * @const
     */
    "MEID": "MEID"  };


  return exports;
}));


