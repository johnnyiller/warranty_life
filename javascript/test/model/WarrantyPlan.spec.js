/**
 * Warranty Life
 * Warranty life api definition for openapi 3.0.0 from here we generate api's
 *
 * OpenAPI spec version: 1.0.1
 * Contact: jeff.durand@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WarrantyLife);
  }
}(this, function(expect, WarrantyLife) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WarrantyLife.WarrantyPlan();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WarrantyPlan', function() {
    it('should create an instance of WarrantyPlan', function() {
      // uncomment below and update the code to test WarrantyPlan
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be.a(WarrantyLife.WarrantyPlan);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property applicableCategoryIds (base name: "applicableCategoryIds")', function() {
      // uncomment below and update the code to test the property applicableCategoryIds
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property applicableProductFlags (base name: "applicableProductFlags")', function() {
      // uncomment below and update the code to test the property applicableProductFlags
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property productMinPrice (base name: "productMinPrice")', function() {
      // uncomment below and update the code to test the property productMinPrice
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property durationUnit (base name: "durationUnit")', function() {
      // uncomment below and update the code to test the property durationUnit
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property isDurationFixed (base name: "isDurationFixed")', function() {
      // uncomment below and update the code to test the property isDurationFixed
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property partsDuration (base name: "partsDuration")', function() {
      // uncomment below and update the code to test the property partsDuration
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property partsDurationUnit (base name: "partsDurationUnit")', function() {
      // uncomment below and update the code to test the property partsDurationUnit
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property labourDuration (base name: "labourDuration")', function() {
      // uncomment below and update the code to test the property labourDuration
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property labourDurationUnit (base name: "labourDurationUnit")', function() {
      // uncomment below and update the code to test the property labourDurationUnit
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property rmaShippingCoverage (base name: "rmaShippingCoverage")', function() {
      // uncomment below and update the code to test the property rmaShippingCoverage
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property serviceLocation (base name: "serviceLocation")', function() {
      // uncomment below and update the code to test the property serviceLocation
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property claimPhone (base name: "claimPhone")', function() {
      // uncomment below and update the code to test the property claimPhone
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property planAvailableFrom (base name: "planAvailableFrom")', function() {
      // uncomment below and update the code to test the property planAvailableFrom
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property planAvailableTo (base name: "planAvailableTo")', function() {
      // uncomment below and update the code to test the property planAvailableTo
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property sellableDuration (base name: "sellableDuration")', function() {
      // uncomment below and update the code to test the property sellableDuration
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property sellableDurationUnit (base name: "sellableDurationUnit")', function() {
      // uncomment below and update the code to test the property sellableDurationUnit
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property srp (base name: "srp")', function() {
      // uncomment below and update the code to test the property srp
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property wholesaleCost (base name: "wholesaleCost")', function() {
      // uncomment below and update the code to test the property wholesaleCost
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property retailerCost (base name: "retailerCost")', function() {
      // uncomment below and update the code to test the property retailerCost
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property retailPrice (base name: "retailPrice")', function() {
      // uncomment below and update the code to test the property retailPrice
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriod (base name: "billingPeriod")', function() {
      // uncomment below and update the code to test the property billingPeriod
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodUnit (base name: "billingPeriodUnit")', function() {
      // uncomment below and update the code to test the property billingPeriodUnit
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "countryCode")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property termsUrl (base name: "termsUrl")', function() {
      // uncomment below and update the code to test the property termsUrl
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new WarrantyLife.WarrantyPlan();
      //expect(instance).to.be();
    });

  });

}));
